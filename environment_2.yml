name: rapids_nlp_env # You can change this name if you like
channels:
  - rapidsai # Primary channel for RAPIDS libraries
  - nvidia # For CUDA-related packages and NVIDIA libraries
  - conda-forge # For a wide range of other community-maintained packages
  - defaults # For any base packages not found elsewhere (lower priority)
dependencies:
  # --- Core Specifications ---
  - python=3.10
  - cudatoolkit=11.8

  # --- RAPIDS Metapackage ---
  # This pulls in cudf, cuml, cupy, rmm, and other RAPIDS libraries
  # that are compatible with each other and the specified Python/CUDA versions.
  # Check rapids.ai for the latest stable version compatible with CUDA 11.8
  # if you are creating this environment much later.
  - rapids=24.04

  # --- Standard Data Science & Utility Libraries from your imports ---
  - pandas
  - numpy
  - scikit-learn # For train_test_split, KFold, ParameterGrid, f1_score, classification_report
  - joblib
  - matplotlib # Likely needed by plotting_utils

  # --- Optional: For Development & Notebooks (Highly Recommended) ---
  - jupyterlab # For an integrated development environment with notebooks
  - notebook # For classic Jupyter notebooks

  # --- Pip ---
  # Include pip itself in the conda environment
  - pip
  # If your custom utilities (config_loader, pipeline_utils, plotting_utils)
  # are part of a local Python package with a setup.py, you can install it via pip.
  # For example, if they are in the root of your project with a setup.py:
  # - pip:
  #   - -e . # Installs the local package in editable mode
